{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Adri\u00e1n Velasco Carrasco Pr\u00e1ctica 2.1 - Instalaci\u00f3n y configuraci\u00f3n de un servidor web Nginx Instalaci\u00f3n Para instalar el servidor de nginx en nuestra Debian debemos de realizar los siguientes comandos: sudo apt update sudo apt install nginx Y comprobamos que se ha instalado y que est\u00e1 funcionando correcamente: systemctl status nginx Creaci\u00f3n de las carpetas del sitio web Vamos a crear nuestra carpeta para nuestro sitio web dentro de /var/www ya que t\u00edpicamente, estas carpetas almacenan los sitios. Para crearla haremos uso del comando: sudo mkdir -p /var/www/adridevelop/html Para el siguiente paso, deberemos de instalar git en Debian. Para ello realizamos lo siguiente. Y dentro de esta carpeta, debemos clonar el repositorio: https://github.com/cloudacademy/static-website-example Ahora, haremos que el usuario www-data sea el propietario mediante el comando sudo chown -R www-data:www-data /var/www/adridevelop/html . A continuaci\u00f3n, daremos los permisos necesarios para no tener errores en el acceso al sitio web usando el comando sudo chmod -R 755 /var/www/adridevelop Y comprobaremos que est\u00e1 funcionando desde nuestra m\u00e1quina local escribiendo en la barra de b\u00fasqueda la ip de nuestro servidor. Configuraci\u00f3n de servidor web NGINX Para que podamos presentar contenido en nuestra webm deberemos de crear un bloque de servidor con directivas correctas. Para ello, crearemos un nuevo archivo de configuraci\u00f3n. Iremos a nuestra terminal y crearemos nuestro archivo de configuraci\u00f3n mediante sudo nano /etc/nginx/sites-available/vuestro_dominio . Y dentro de este archivo que hemos creado, generaremos lo siguiente: server { listen 80; listen [::]:80; root /ruta/absoluta/archivo/index; index index.html index.htm index.nginx-debian.html; server_name nombre_web; location / { try_files $uri $uri/ =404; } } Tambi\u00e9n, deberemos de crear un archivo simb\u00f3lico entre este archivo y el de los sitios que est\u00e1n habilitados. Para ello sudo ln -s /etc/nginx/sites-available/nombre_web /etc/nginx/sites-enabled/ Y reiniciaremos el servidor. sudo systemctl restart nginx Comprobaciones Para comprobar que nuestro host est\u00e1 funcionando, deberemos de acceder dentro de nuestra m\u00e1quina cliente a /etc/host y a\u00f1adiremos nuestro servidor nginx. Y deberemos tambi\u00e9n comprobar que, las peticiones se est\u00e1n registrando correctamente en los archivos de logs, tanto las correctas como las err\u00f3neas. FTP Para configurar SFTP en Debian deberemos de instalar antes vsftpd, para ello, haremos uso de sudo apt-get install vsftpd Tras eso, crearemos una carpeta en nuestro home de Debian llamada ftp. mkdir /home/adrian-alumno/ftp Tras eso, deberemos de crear los certificados de seguridad necesarios mediante sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/vsftpd.pem -out /etc/ssl/private/vsftpd.pem Y una vez realizados estos pasos, deberemos de editar el documento /etc/vsftpd.conf de la siguiente manera: sudo nano /etc/vsftpd.conf Y guardaremos los cambios y reiniciaremos el servidor. sudo systemctl restart -now vsftpd Tras esta configuraci\u00f3n, instalaremos FileZilla y haremos una operaci\u00f3n ftp a nuestro servidor. Para ello, deberemos de poner nuestra ip, nombre de usuario, contrase\u00f1a y puerto para que podamos realizar la conexi\u00f3n. Tras haber realizado la conexi\u00f3n correctamente, debemos pasar un archivo para comprobar que funciona, en mi caso, una foto. HTTPS Deberemos de instalar openssl para que podamos acceder a nuestro sitio a trav\u00e9s de https. Ahora, crearemos nuestro certificado. Y tras eso, almacenaremos la configuraci\u00f3n. Y agregaremos el cerficado y las nuevas rutas a nuestro fichero. Y en nuestro host, a\u00f1adiremos en nuestra ip, las direcciones a\u00f1adidas anteriormente. Y buscamos en nuestro navegador nuestro sitio web.","title":"Adri\u00e1n Velasco Carrasco"},{"location":"#adrian-velasco-carrasco","text":"","title":"Adri\u00e1n Velasco Carrasco"},{"location":"#practica-21-instalacion-y-configuracion-de-un-servidor-web-nginx","text":"","title":"Pr\u00e1ctica 2.1 - Instalaci\u00f3n y configuraci\u00f3n de un servidor web Nginx"},{"location":"#instalacion","text":"Para instalar el servidor de nginx en nuestra Debian debemos de realizar los siguientes comandos: sudo apt update sudo apt install nginx Y comprobamos que se ha instalado y que est\u00e1 funcionando correcamente: systemctl status nginx","title":"Instalaci\u00f3n"},{"location":"#creacion-de-las-carpetas-del-sitio-web","text":"Vamos a crear nuestra carpeta para nuestro sitio web dentro de /var/www ya que t\u00edpicamente, estas carpetas almacenan los sitios. Para crearla haremos uso del comando: sudo mkdir -p /var/www/adridevelop/html Para el siguiente paso, deberemos de instalar git en Debian. Para ello realizamos lo siguiente. Y dentro de esta carpeta, debemos clonar el repositorio: https://github.com/cloudacademy/static-website-example Ahora, haremos que el usuario www-data sea el propietario mediante el comando sudo chown -R www-data:www-data /var/www/adridevelop/html . A continuaci\u00f3n, daremos los permisos necesarios para no tener errores en el acceso al sitio web usando el comando sudo chmod -R 755 /var/www/adridevelop Y comprobaremos que est\u00e1 funcionando desde nuestra m\u00e1quina local escribiendo en la barra de b\u00fasqueda la ip de nuestro servidor.","title":"Creaci\u00f3n de las carpetas del sitio web"},{"location":"#configuracion-de-servidor-web-nginx","text":"Para que podamos presentar contenido en nuestra webm deberemos de crear un bloque de servidor con directivas correctas. Para ello, crearemos un nuevo archivo de configuraci\u00f3n. Iremos a nuestra terminal y crearemos nuestro archivo de configuraci\u00f3n mediante sudo nano /etc/nginx/sites-available/vuestro_dominio . Y dentro de este archivo que hemos creado, generaremos lo siguiente: server { listen 80; listen [::]:80; root /ruta/absoluta/archivo/index; index index.html index.htm index.nginx-debian.html; server_name nombre_web; location / { try_files $uri $uri/ =404; } } Tambi\u00e9n, deberemos de crear un archivo simb\u00f3lico entre este archivo y el de los sitios que est\u00e1n habilitados. Para ello sudo ln -s /etc/nginx/sites-available/nombre_web /etc/nginx/sites-enabled/ Y reiniciaremos el servidor. sudo systemctl restart nginx","title":"Configuraci\u00f3n de servidor web NGINX"},{"location":"#comprobaciones","text":"Para comprobar que nuestro host est\u00e1 funcionando, deberemos de acceder dentro de nuestra m\u00e1quina cliente a /etc/host y a\u00f1adiremos nuestro servidor nginx. Y deberemos tambi\u00e9n comprobar que, las peticiones se est\u00e1n registrando correctamente en los archivos de logs, tanto las correctas como las err\u00f3neas.","title":"Comprobaciones"},{"location":"#ftp","text":"Para configurar SFTP en Debian deberemos de instalar antes vsftpd, para ello, haremos uso de sudo apt-get install vsftpd Tras eso, crearemos una carpeta en nuestro home de Debian llamada ftp. mkdir /home/adrian-alumno/ftp Tras eso, deberemos de crear los certificados de seguridad necesarios mediante sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/vsftpd.pem -out /etc/ssl/private/vsftpd.pem Y una vez realizados estos pasos, deberemos de editar el documento /etc/vsftpd.conf de la siguiente manera: sudo nano /etc/vsftpd.conf Y guardaremos los cambios y reiniciaremos el servidor. sudo systemctl restart -now vsftpd Tras esta configuraci\u00f3n, instalaremos FileZilla y haremos una operaci\u00f3n ftp a nuestro servidor. Para ello, deberemos de poner nuestra ip, nombre de usuario, contrase\u00f1a y puerto para que podamos realizar la conexi\u00f3n. Tras haber realizado la conexi\u00f3n correctamente, debemos pasar un archivo para comprobar que funciona, en mi caso, una foto.","title":"FTP"},{"location":"#https","text":"Deberemos de instalar openssl para que podamos acceder a nuestro sitio a trav\u00e9s de https. Ahora, crearemos nuestro certificado. Y tras eso, almacenaremos la configuraci\u00f3n. Y agregaremos el cerficado y las nuevas rutas a nuestro fichero. Y en nuestro host, a\u00f1adiremos en nuestra ip, las direcciones a\u00f1adidas anteriormente. Y buscamos en nuestro navegador nuestro sitio web.","title":"HTTPS"},{"location":"Practica-2.2/","text":"Comienzo Pr\u00e1ctica 2.2","title":"Practica 2.2"},{"location":"Practica-2.2/#comienzo-practica-22","text":"","title":"Comienzo Pr\u00e1ctica 2.2"}]}